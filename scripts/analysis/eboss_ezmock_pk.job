#PBS -N ezmock_pk
#PBS -l nodes=1:ppn=8
#PBS -l walltime=00:30:00
#PBS -j oe
#PBS -A PHS0336 

# submit with 'qsub [name of the script]'
# find out start time with 'showstart [job id]'
# find stats of the queue with 'qstat -u medirz90'
# delete job with 'qdel [job id]'
# or with 'qstop [job id]'  
# see the balance with 'OSCusage'


#--- notes
# aug 27: only main and known
# run with 'qsub -t 1-9 -v iscont=1 eboss_ezmock_pk.job'
#---- environment variables and activation
#set -x

#module load cuda/10.1.168

# manually add the path, later we will install the pipeline with `pip`
source ${HOME}/.bashrc

export PYTHONPATH=${HOME}/github/sysnetdev:${HOME}/github/LSSutils:${PYTHONPATH}
export NUMEXPR_MAX_THREADS=2
source activate sysnet

cd ${HOME}/github/LSSutils/scripts/analysis

#mockid=0022
#iscont=0
printf -v mockid "%04d" $PBS_ARRAYID
#iscont=$2 # use -v variable=value instead, see https://www.osc.edu/supercomputing/batch-processing-at-osc/job-submission

# NOTE:in case some of jobs array failed
# have the indices in indices.txt
# PBS_ARRAYID=5 # uncomment for test
#mockid=$(sed "$PBS_ARRAYID"'q;d' indices.txt)
#printf -v mockid "%04d" ${mockid}

echo ${mockid} ${iscont}

#---- path to the codes
prep=${HOME}/github/LSSutils/scripts/analysis/prepare_data_eboss.py
nnfit=${HOME}/github/sysnetdev/scripts/app.py
swap=${HOME}/github/LSSutils/scripts/analysis/swap_ezmock_eboss.py
pk=${HOME}/github/LSSutils/scripts/analysis/run_pk.py
nnbar=${HOME}/github/LSSutils/scripts/analysis/run_nnbar_eboss.py
cl=${HOME}/github/LSSutils/scripts/analysis/run_cell_eboss.py

#---- path to the data
nside=512
l1=-1.0 # l1 regularization deactivated with <0
nn_structure=(4 20) 
# 'star_density', 'ebv', 'loghi', 'sky_g', 'sky_r', 'sky_i', 'sky_z', 
# 'depth_g_minus_ebv','depth_r_minus_ebv', 'depth_i_minus_ebv', 'depth_z_minus_ebv', 
# 'psf_g', 'psf_r', 'psf_i', 'psf_z',
#  'run', 'airmass'
axes_all=({0..16})
axes_known=(0 7) # nstar, depth-g
nepoch=150
nchains=20
version="v7" # real data was v7_2
release="2.0"
caps="NGC" # mocks do not have SGC
slices="main" # low mid z1 z2 z3" # ezmocks do not have highz
maps="known"  # known all
table_name="ngal_eboss"
templates="${HOME}/data/templates/SDSS_WISE_HI_imageprop_nside${nside}.h5"
eboss_dir="${HOME}/data/${version}/"

do_pk=true    # 4 min

#---- functions
function get_datran(){
    if [ $1 = 0 ]
    then
        dat=${eboss_dir}catalogs_raw/null/EZmock_eBOSS_QSO_NGC_v7_noweight_${mockid}.dat.fits
        ran=${dat/.dat./.ran.}
    else
	dat=${eboss_dir}catalogs_raw/contaminated/EZmock_eBOSS_QSO_NGC_v7_${mockid}.dat.fits
        ran=${dat/.dat./.ran.}
    fi
    echo ${dat} ${ran}
}

function get_zlim(){
    
    if [ $1 = main ]
    then
        zlim='0.8 2.2'
    elif [ $1 = highz ]
    then
        zlim='2.2 3.5'
    fi
    echo $zlim
}

if [ "${do_pk}" = true ]
then
    for cap in ${caps}
    do
        for zrange in main # highz  # mocks do not have highz
        do
            zlim=$(get_zlim ${zrange})
           
            # default
            input_dir=${eboss_dir}
            output_dir=${eboss_dir}${release}/measurements/spectra/

	    read dat ran < <(get_datran $iscont)

            out=${output_dir}spectra_${cap}_knownsystot_mainhighz_512_v7_${iscont}_${mockid}_${zrange}.json
            du -h $dat $ran
            echo ${out} ${zlim}
            
            mpirun -np 8 python ${pk} -g $dat -r $ran -o $out --use_systot --zlim ${zlim} \
                                      -n 1024 --dk 0.01 --kmax 0.4 -b 5000. --cosmo ezmock \
                                      -p 0 2 4
	    if [ $iscont = 1 ]
	    then
		out=${output_dir}spectra_${cap}_noweight_mainhighz_512_v7_${iscont}_${mockid}_${zrange}.json
		echo ${out}
		#mpirun -np 8 python ${pk} -g $dat -r $ran -o $out --zlim ${zlim}  ## fix this before use
	    fi
            
        done
    done
fi
